

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    int? userRole = HttpContextAccessor.HttpContext.Session.GetInt32("Role");
    bool isLoggedIn = HttpContextAccessor.HttpContext.Session.GetString("UserName") != null;
    //int? IsProfileApproved = HttpContextAccessor.HttpContext.Session.GetInt32("IsProfileApproved");
    var isProfileApprovedString = HttpContextAccessor.HttpContext.Session.GetString("IsProfileApproved");
    bool isProfileApproved = isProfileApprovedString == "True"; 
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Dating</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Dating.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha384-k6RqeWeci5ZR/Lv4MR0sA0FfDOMM/3e1hI3zZ7dV7L5P9R6iN5Rk6z6tbb5cO+R" crossorigin="anonymous">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            overflow: hidden;
            min-height: 100vh; 
            display: flex;
            justify-content: center;
            align-items: center;
            background: linear-gradient(135deg, #ef2a54, #FF3A5C);
            position: relative;
        }

        .snow-container, .rain-container {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh; 
            pointer-events: none;
            overflow: hidden;
            z-index: 0; 
        }

        /* Bông tuyết */
        .snow {
            position: absolute;
            top: -10%;
            width: 10px;
            height: 10px;
            background-color: white;
            opacity: 0.8;
            animation: fall linear infinite; 
            clip-path: polygon(
                50% 0%,  61% 35%,  98% 35%, 
                68% 57%,  79% 91%,  50% 70%, 
                21% 91%,  32% 57%,  2% 35%, 
                39% 35%
            ); 
        }

        @@keyframes fall {
            0% {
                transform: translateY(0);
            }
            100% {
                transform: translateY(100vh); 
            }
        }

        /* Mưa */
        .rain {
            position: absolute;
            top: -20%;
            width: 2px;
            height: 20px;
            background-color: rgba(255, 255, 255, 0.5);
            animation: rain-fall linear infinite;
        }

        @@keyframes rain-fall {
            0% {
                transform: translateY(0);
            }
            100% {
                transform: translateY(100vh); 
            }
        }

        .container {
            position: relative; 
            z-index: 1; /* Đặt z-index cao hơn mưa và tuyết */
        }

        /*Menu*/
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: #CCCCCC;
            z-index: 1000;
            padding: 10px;
        }

        /* Định dạng cho các mục điều hướng */
        .nav {
            display: flex;
            justify-content: space-around; 
        }

        .nav-item {
            list-style-type: none;
        }

        .nav-link {
            color: white;
            text-decoration: none;
            font-size: 16px;
            padding: 10px;
            transition: background-color 0.3s;
        }

            .nav-link:hover {
                background-color: #555;
                border-radius: 5px;
            }

        .container {
            margin-top: 60px; 
        }


        .nav-item img {
            width: 30px; 
            height: 30px; 
            object-fit: cover; 
            border-radius: 5px; 
        }


        /* Định dạng cho nút logout */
        .logout-button img {
            width: 30px; 
            height: 30px; 
            margin-right: 5px; 
            vertical-align: middle; 
        }

        .logout-button {
            display: inline-flex; 
            align-items: center; 
            color: white;
            background-color: transparent; 
            border: none; 
            cursor: pointer; 
            padding: 5px;
            transition: background-color 0.3s; 
        }

            
            .logout-button:hover {
                background-color: #555; 
                border-radius: 5px;
            }
        

        .background-container {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;
            z-index: -1;
            overflow: hidden;
        }

        .background-image {
            width: 100%;
            height: 100%;
            object-fit: cover; 
            position: absolute;
            top: 0;
            left: 0;
            opacity: 0;
            transition: opacity 1s ease-in-out;
        }

            .background-image.active {
                opacity: 1; 
            }


        .background-container img {
            width: 100%;
            height: 100vh;
            object-fit: cover;
            opacity: 0.3; 
            transition: opacity 1s ease-in-out; 
            filter: blur(8px); 
        }

    </style>
</head>
<body>
    <div class="background-container">
        <img src="~/image/background1.jpg" class="background-image active" alt="Background 1" />
        <img src="~/image/background2.jpg" class="background-image" alt="Background 2" />
    </div>
    <div class="snow-container"></div>
    <div class="rain-container"></div>

    @if (isLoggedIn) 
    {
        <div class="sidebar">
            <div class="nav">
                
                @if (userRole.HasValue && userRole.Value == 1) 
                {
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Users")"><img src="~/image/users.png" alt="" /></a>
                    </div>
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("Report", "Users")"><img src="~/image/phanhoi.png" alt="" /></a>
                    </div>
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Admin")"><img src="~/image/feedback (1).png" alt="" /></a>
                    </div>
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("CreateNotification", "Admin")"><img src="~/image/thongbao.png" alt="" /></a>
                    </div>
                    <form asp-controller="Users" asp-action="Logout" method="post" class="d-inline logout-button">
                        <button type="submit" class="btn btn-link text-decoration-none custom-button">
                            <i class="fas fa-sign-out-alt"></i> <img src="~/image/sign-out-alt.png" alt="" />
                        </button>
                    </form>
                }
                @if (userRole.HasValue && userRole.Value == 2)
                {
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("UserList", "Users")"><img src="~/image/home.png" alt="" /></a>
                    </div>
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("ViewProfile", "Users")"><img src="~/image/profile.png" alt="" /></a>
                    </div>
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("ViewMatches", "Users")"><img src="~/image/tinnhan.png" alt="" /></a>
                    </div>
                    @if (!isProfileApproved)
                    {
                        <div class="nav-item">
                            <a class="nav-link" href="@Url.Action("CreateProfile", "Users")"><img src="~/image/thongtin.png" alt="" /></a>
                        </div>
                    }
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("Feedback", "Users")"><img src="~/image/phanhoi.png" alt="" /></a>
                    </div>
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("UserNotifications", "Users")"><img src="~/image/thongbao.png" alt="" /></a>
                    </div>
                    <form asp-controller="Users" asp-action="Logout" method="post" class="d-inline logout-button">
                        <button type="submit" class="btn btn-link text-decoration-none custom-button">
                            <i class="fas fa-sign-out-alt"></i><img src="~/image/sign-out-alt.png" alt="" />
                        </button>
                    </form>
                }
            </div>
        </div>
    }


    <!-- Original content -->
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        const snowContainer = document.querySelector('.snow-container');
        const rainContainer = document.querySelector('.rain-container');

        function createSnowflake() {
            const snowflake = document.createElement('div');
            snowflake.classList.add('snow');

            // Đặt kích thước ngẫu nhiên cho bông tuyết
            const size = Math.random() * 10 + 10; 
            snowflake.style.width = size + 'px';
            snowflake.style.height = size + 'px';
            snowflake.style.left = Math.random() * 100 + 'vw'; 
            snowflake.style.animationDuration = (Math.random() * 3 + 2) + 's'; 

            snowContainer.appendChild(snowflake);

            // Xóa tuyết khi nó đã rơi xong
            setTimeout(() => {
                snowflake.remove();
            }, 5000); 
        }

        function createRaindrop() {
            const raindrop = document.createElement('div');
            raindrop.classList.add('rain');

            // Đặt kích thước ngẫu nhiên cho giọt mưa
            raindrop.style.left = Math.random() * 100 + 'vw'; 
            raindrop.style.animationDuration = (Math.random() * 1 + 0.5) + 's'; 
            raindrop.style.height = Math.random() * 10 + 10 + 'px'; 

            rainContainer.appendChild(raindrop);

            // Xóa giọt mưa khi nó đã rơi xong
            setTimeout(() => {
                raindrop.remove();
            }, 2000); 
        }

        const backgroundImages = document.querySelectorAll('.background-image');
        let currentIndex = 0;

        function changeBackground() {
            backgroundImages[currentIndex].classList.remove('active');
            currentIndex = (currentIndex + 1) % backgroundImages.length; 
            backgroundImages[currentIndex].classList.add('active');
        }

        setInterval(changeBackground, 5000);

        setInterval(createSnowflake, 200); 
        setInterval(createRaindrop, 100); 
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

@* @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    int? userRole = HttpContextAccessor.HttpContext.Session.GetInt32("Role");
    bool isLoggedIn = HttpContextAccessor.HttpContext.Session.GetString("UserName") != null;
    var isProfileApprovedString = HttpContextAccessor.HttpContext.Session.GetString("IsProfileApproved");
    bool isProfileApproved = isProfileApprovedString == "True";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Dating</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Dating.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha384-k6RqeWeci5ZR/Lv4MR0sA0FfDOMM/3e1hI3zZ7dV7L5P9R6iN5Rk6z6tbb5cO+R" crossorigin="anonymous">

    <style>
        /* Đặt lại lề và padding cho toàn trang */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* Đảm bảo trang không bị cuộn dọc */
        body {
            overflow-x: hidden;
            min-height: 100vh;
            background: linear-gradient(135deg, #ef2a54, #FF3A5C);
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
        }

        /* Container cho menu */
        .sidebar {
            width: 100%;
            background-color: #333;
            padding: 10px;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 2000;
        }

        .nav {
            display: flex;
            justify-content: space-around;
            align-items: center;
            flex-wrap: wrap;
        }

        .nav-item {
            list-style-type: none;
        }

        .nav-link {
            color: white;
            text-decoration: none;
            font-size: 1.2rem;
            padding: 10px;
            transition: background-color 0.3s;
        }

        .nav-link:hover {
            background-color: #555;
            border-radius: 5px;
        }

        /* Định dạng cho ảnh */
        .nav-item img {
            width: 24px;
            height: 24px;
            object-fit: cover;
            border-radius: 5px;
        }

        .logout-button img {
            width: 30px;
            height: 30px;
            margin-right: 5px;
            vertical-align: middle;
        }
        .logout-button {
            display: inline-flex;
            align-items: center;
            color: white;
            background-color: transparent;
            border: none;
            cursor: pointer;
            padding: 5px;
            transition: background-color 0.3s;
        }

        .logout-button:hover {
            background-color: #555;
            border-radius: 5px;
        }

        .container {
            margin-top: 80px;
            width: 100%;
        }

    </style>
</head>

<body>
    <div class="sidebar">
        <div class="nav">
            @if (isLoggedIn)
            {
                @if (userRole.HasValue && userRole.Value == 1)
                {
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Users")"><img src="~/image/duyetprofile.png" alt="" /></a>
                    </div>
                    <form asp-controller="Users" asp-action="Logout" method="post" class="d-inline logout-button">
                        <button type="submit" class="btn btn-link text-decoration-none custom-button">
                            <i class="fas fa-sign-out-alt"></i> <img src="~/image/logout.png" alt="" />
                        </button>
                    </form>
                }
                @if (userRole.HasValue && userRole.Value == 2)
                {
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("UserList", "Users")"><img src="~/image/home.png" alt="" /></a>
                    </div>
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("ViewProfile", "Users")"><img src="~/image/profile.png" alt="" /></a>
                    </div>
                    <div class="nav-item">
                        <a class="nav-link" href="@Url.Action("ViewMatches", "Users")"><img src="~/image/tinnhan.png" alt="" /></a>
                    </div>
                    @if (!isProfileApproved)
                    {
                        <div class="nav-item">
                            <a class="nav-link" href="@Url.Action("CreateProfile", "Users")"><img src="~/image/thongtin.png" alt="" /></a>
                        </div>
                    }
                    <form asp-controller="Users" asp-action="Logout" method="post" class="d-inline logout-button">
                        <button type="submit" class="btn btn-link text-decoration-none custom-button">
                            <i class="fas fa-sign-out-alt"></i> <img src="~/image/logout.png" alt="" />
                        </button>
                    </form>
                }
            }
        </div>
    </div>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted"></footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>
 *@