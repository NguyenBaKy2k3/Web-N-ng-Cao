@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    int? UserId = HttpContextAccessor.HttpContext.Session.GetInt32("UserId");
}
@model Dating.Models.UsersModels

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
    <style>
        .chat-container {
            max-width: 800px;
            margin: 0 auto;
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .message-list {
            max-height: 400px;
            overflow-y: auto;
            margin-bottom: 20px;
        }

        .message-container {
            /* display: flex;
            flex-direction: column;
            margin-bottom: 10px; */
            display: flex;
            align-items: flex-start;
            margin-bottom: 10px;
            flex-direction: column;
        }

        .message {
            padding: 10px;
            border-radius: 10px;
            background-color: #e1f7d5;
            max-width: 70%;
            position: relative;
            word-wrap: break-word;
            display: inline-block; 
            padding: 8px 12px;
        }

        .sent {
            align-self: flex-end;
            background-color: #cfe9ff;
        }

        .received {
            align-self: flex-start;
        }

        .message-time {
            font-size: 10px;
            color: #888;
            margin-top: 5px;
        }

        /* textarea {
            width: 100%;
            height: 60px;
            border-radius: 5px;
            padding: 10px;
            margin-top: 10px;
        }

        button {
            padding: 10px 15px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 10px;
        }

        button:hover {
            background-color: #45a049;
        } */
        #sendMessageForm {
            display: flex;
            justify-content: space-between; 
            align-items: center; 
            margin-top: 10px;
        }

        textarea {
            width: 80%;
            height: 60px;
            border-radius: 10px; 
            padding: 10px;
            margin-right: 10px; 
            border: 1px solid #ccc; 
            resize: none;
        }

        button {
            padding: 10px 15px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 10px; 
            cursor: pointer;
        }

            button:hover {
                background-color: #45a049;
            }
        .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 12px;
        }


        .chat-title {
            flex-grow: 1;
            text-align: center;
            margin-bottom: 20px;
            text-decoration: none;
            color: black;
            font-weight: bold;
            font-size: 20px;
        }

        .chat-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding: 0 20px;
        }

        .report-icon {
            margin-left: 15px;
            color: red;
            font-size: 20px; /* Tăng kích thước để icon dễ nhìn */
            text-decoration: none;
            display: inline-flex; /* Đảm bảo icon và nội dung được hiển thị đúng */
            align-items: center; /* Căn giữa hình ảnh */
        }

            .report-icon:hover {
                color: darkred;
            }

            /* Điều chỉnh cho image nếu bạn sử dụng ảnh thay vì icon */
            .report-icon img {
                width: 20px; /* Điều chỉnh kích thước ảnh */
                height: auto; /* Giữ tỷ lệ ảnh */
            }

    </style>
</head>
<body>

    <div class="chat-container">
        <div class="chat-header">
            <a href="@Url.Action("Profile_Person", "Users", new { likedUserId = Model.user_id })" class="chat-title">
                @Model.username
            </a>
            <a href="@Url.Action("ReportUser", "Users", new { reportedUserId = Model.user_id })" class="report-icon">
                <img src="~/image/feedback.png" alt="Feedback" />
            </a>

        </div>
        @* <h2>Nhắn tin với @Model.username</h2> *@
        <div class="message-list" id="messagesList">
        </div>

        <form id="sendMessageForm">
            <input type="hidden" id="receiverId" value="@Model.user_id" />
            <textarea id="message" placeholder="Nhập tin nhắn..." required></textarea>
            <button type="submit">Gửi</button>
        </form>
    </div>

    @section Scripts {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.0/signalr.min.js"></script>
        <script>
            // Kết nối với SignalR Hub
            console.log("Kết nối tới SignalR Hub...");
            var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
            var userId = @UserId ?? 0;
            console.log("UserId:", userId);
            // Lấy userId của người dùng hiện tại và receiverId từ Razor model
            var receiverId = parseInt(document.getElementById("receiverId").value);
            console.log("User ID:", userId, "| Receiver ID:", receiverId);

            // Hàm tải lịch sử tin nhắn
            function loadChatHistory() {
                console.log("Tải lịch sử tin nhắn...");
                fetch(`/Messages/GetChatHistory?&receiverId=${receiverId}`)
                    .then(response => {
                        if (!response.ok) {
                            console.error("Lỗi phản hồi từ máy chủ:", response.statusText);
                            throw new Error(response.statusText);
                        }
                        return response.json();
                    })
                    .then(messages => {
                        console.log("Lịch sử tin nhắn nhận được:", messages);
                        var messagesList = document.getElementById("messagesList");
                        messagesList.innerHTML = ""; // Xóa nội dung cũ

                        // Hiển thị từng tin nhắn
                        messages.forEach(msg => {
                            console.log("Xử lý tin nhắn:", msg);
                            var messageContainer = document.createElement("div");
                            messageContainer.classList.add("message-container");

                            if (msg.sender_id == receiverId) {
                                var avatar = document.createElement("img");
                                avatar.src = msg.avatar_url || "/path/to/default-avatar.jpg"; // Đường dẫn avatar mặc định nếu không có ảnh
                                avatar.classList.add("avatar");
                                messageContainer.appendChild(avatar);
                            }

                            var messageElement = document.createElement("div");
                            messageElement.classList.add("message");
                            if (msg.sender_id == userId) {
                                messageElement.classList.add("sent");
                            } else {
                                messageElement.classList.add("received");
                            }
                            messageElement.innerHTML = "<p>" + msg.message_text + "</p>";
                            messageContainer.appendChild(messageElement);

                            // Thêm thời gian gửi tin nhắn
                            var timeElement = document.createElement("span");
                            timeElement.classList.add("message-time");
                            timeElement.textContent = msg.sent_at;
                            messageContainer.appendChild(timeElement);

                            messagesList.appendChild(messageContainer);
                        });

                        // Tự động cuộn xuống cuối danh sách
                        messagesList.scrollTop = messagesList.scrollHeight;
                        console.log("Đã cuộn xuống cuối danh sách tin nhắn.");
                    })
                    .catch(error => console.error('Error loading chat history:', error));
            }

            // Lắng nghe sự kiện nhận tin nhắn
            connection.on("ReceiveMessage", function (senderId, message, timestamp, senderAvatar) {
                console.log("Nhận tin nhắn từ:", senderId, "| Nội dung:", message, "| Thời gian:", timestamp);

                var messageContainer = document.createElement("div");
                messageContainer.classList.add("message-container");

                if (senderId == receiverId) {
                    var avatar = document.createElement("img");
                    avatar.src = senderAvatar || "/path/to/default-avatar.jpg"; // Đường dẫn avatar mặc định nếu không có ảnh
                    avatar.classList.add("avatar");
                    messageContainer.appendChild(avatar);
                }

                var messageElement = document.createElement("div");
                messageElement.classList.add("message");
                if (senderId == userId) {
                    messageElement.classList.add("sent");
                } else {
                    messageElement.classList.add("received");
                }
                messageElement.innerHTML = "<p>" + message + "</p>";
                messageContainer.appendChild(messageElement);

                // Thêm thời gian gửi tin nhắn
                var formattedTime = formatTimestamp(timestamp);
                var timeElement = document.createElement("span");
                timeElement.classList.add("message-time");
                timeElement.textContent = formattedTime;
                messageContainer.appendChild(timeElement);

                document.getElementById("messagesList").appendChild(messageContainer);
                document.getElementById("messagesList").scrollTop = document.getElementById("messagesList").scrollHeight;
                console.log("Tin nhắn mới đã được thêm vào danh sách.");
            });

            // Hàm định dạng thời gian
            function formatTimestamp(timestamp) {
                var date = new Date(timestamp); // Chuyển đổi timestamp thành đối tượng Date

                var hours = date.getHours().toString().padStart(2, '0'); // Lấy giờ, đảm bảo luôn có 2 chữ số
                var minutes = date.getMinutes().toString().padStart(2, '0'); // Lấy phút, đảm bảo luôn có 2 chữ số
                var seconds = date.getSeconds().toString().padStart(2, '0'); // Lấy giây, đảm bảo luôn có 2 chữ số

                return hours + ":" + minutes + ":" + seconds; // Trả về định dạng giờ:phút:giây
            }

            // Khởi động kết nối và tải lịch sử tin nhắn
            connection.start()
                .then(() => {
                    console.log("Kết nối tới SignalR thành công.");
                    loadChatHistory();
                })
                .catch(function (err) {
                    console.error("Lỗi khi kết nối tới SignalR:", err.toString());
                });

            // Gửi tin nhắn khi form được gửi
            document.getElementById("sendMessageForm").addEventListener("submit", function (event) {
                event.preventDefault();

                var message = document.getElementById("message").value;
                console.log("Gửi tin nhắn:", message);

                connection.invoke("SendMessage", receiverId, message)
                    .then(() => console.log("Tin nhắn đã được gửi tới Receiver ID:", receiverId))
                    .catch(function (err) {
                        console.error("Lỗi khi gửi tin nhắn:", err.toString());
                    });

                document.getElementById("message").value = ""; // Xóa nội dung sau khi gửi
                console.log("Đã xóa nội dung khung nhập tin nhắn.");
            });
        </script>

    }
</body>
</html>
