@model IEnumerable<Dating.Models.MatchViewModel>


@if (TempData["Message"] != null)
{
    <div class="alert alert-success" id="successMessage">
        @TempData["Message"]
    </div>
}

<div class="big-card">
    <h2>DANH SÁCH BẠN BÈ</h2>
    <div class="card-container">
        @if (Model != null && Model.Any())
        {
            @foreach (var match in Model)
            {
                <div class="card">
                    <a href="@Url.Action("Chat", "Messages", new { id = match.UserId })">
                        <!-- Thay đổi ở đây -->
                        <img src="@match.ProfilePicture" alt="Ảnh đại diện" class="profile-picture" />
                        <div class="user-info">
                            <span class="username">@match.Username</span>
                            @* <span class="last-message">@match.LastMessage</span> *@
                        </div>
                    </a>
                </div>
            }
        }
        else
        {
            <div class="card">
                <p>Không có ghép đôi nào.</p>
            </div>
        }
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var successMessage = document.getElementById('successMessage');

        if (successMessage) {
            successMessage.style.right = '20px';

            setTimeout(function () {
                successMessage.style.right = '-300px';
            }, 3000);
        }
    });
</script>



<style>

    #successMessage {
        position: fixed;
        right: -300px;
        top: 20px;
        width: 300px;
        padding: 15px;
        background-color: #000;
        color: white;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        transition: right 0.5s ease;
        margin-top: 100px;
    }

    /* Card lớn */
    .big-card {
        background-color: #fff;
        border-radius: 15px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        max-width: 500px; /* Chiều ngang cố định */
        height: 80vh; /* Tăng chiều dài của thẻ lớn */
        margin: 20px auto;
        padding: 20px;
        overflow: hidden;
    }


        /* Canh giữa tiêu đề */
        .big-card h2 {
            text-align: center;
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 20px;
        }

    /* Card con */
    .card-container {
        background-color: #fff;
        max-height: 65vh; /* Chiều cao tối đa để card lớn có thể cuộn */
        overflow-y: auto; /* Tạo thanh cuộn khi danh sách quá dài */
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    /* Card nhỏ */
    .card {
        background-color: #fff;
        padding: 10px; /* Giảm kích thước card nhỏ */
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        display: flex;
        align-items: center;
        width: 100%;
        transition: background-color 0.3s;
    }

        .card:hover {
            background-color: #f1f1f1;
        }

    .profile-picture {
        width: 50px; /* Thu nhỏ ảnh đại diện */
        height: 50px;
        border-radius: 50%;
        margin-right: 15px;
    }

    .user-info {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .username {
        font-size: 16px;
        font-weight: bold;
        color: #000;
    }

    .card a {
        display: flex;
        align-items: center;
        text-decoration: none;
        color: inherit;
        width: 100%;
    }

    /* Thêm thanh cuộn mượt */
    .card-container::-webkit-scrollbar {
        width: 8px;
    }

    .card-container::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    .card-container::-webkit-scrollbar-thumb {
        background-color: #888;
        border-radius: 10px;
    }

        .card-container::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
</style>
